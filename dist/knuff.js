/*!
 * Knuff, v0.7.0 - pushstate and popstate-events, but without the "hassle"!
 * https://github.com/oscarpalmer/knuff
 * (c) Oscar PalmÃ©r, 2019, MIT @license
 */
const knuff=function(){const t=window,o=t.document,e=t.location.href,n=Element.prototype,s=Object.prototype;null==n.matches&&(n.matches=n.msMatchesSelector||n.webkitMatchesSelector);const l={hasPop:!1,hasPush:!1,isActive:!1,options:{baseUrl:`${t.location.protocol}//${t.location.host}/`,selector:"[data-knuff]",onPop:null,onPush:null}},a={getLocation(t){if(t.substr(0,l.options.baseUrl.length)===l.options.baseUrl)return t;return`${l.options.baseUrl.replace(/\/*$/,"/")}${t.replace(/^\/*/,"")}`},setOptions(t){null!=t&&"[object Object]"===s.toString.call(t)&&(Object.keys(t).forEach(o=>{l.options[o]=t[o]}),null!=t.onPop&&"function"==typeof t.onPop&&(l.hasPop=!0),null!=t.onPush&&"function"==typeof t.onPush&&(l.hasPush=!0))}},c={onPop(t){t.state&&l.hasPop&&l.options.onPop.call(t,t,t.state.knuff)},onPush(o){const{target:e}=o;if(!1===e.matches(l.options.selector)||o.altKey||o.ctrlKey||o.metaKey||o.shiftKey)return;let n=e.getAttribute("data-knuff")||e.href||!1;n!==t.location.href&&!1!==n&&(o.preventDefault(),n=a.getLocation(n),t.history.pushState({knuff:n},null,n),l.hasPush&&l.options.onPush.call(o,o,n))}};return n=>{l.isActive||(l.isActive=!0,a.setOptions(n),t.addEventListener("popstate",c.onPop),o.addEventListener("click",c.onPush),t.history.replaceState({knuff:e},null,e))}}();